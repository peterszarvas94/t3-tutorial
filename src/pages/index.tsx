import { SignInButton, useUser } from "@clerk/nextjs";
import type { NextPage } from "next";
import Image from "next/image";
import Head from "next/head";
import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";
import { Inter, Noto_Color_Emoji } from 'next/font/google'
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

// fonts
const notoemoji = Noto_Color_Emoji({
  subsets: ['emoji'],
  weight: ['400'],
});
const inter = Inter({ subsets: ['latin'] });

// dayjs
dayjs.extend(relativeTime);

// CreatePostWizzard
const CreatePostWizzard = () => {
  const { user } = useUser();

  if (!user) return <div>User not found</div>;

  return (
    <div className="flex gap-3 w-full">
      <Image
        src={user.profileImageUrl}
        alt="Pofile image"
        className="w-14 h-14 rounded-full" width="56" height="56"
      />
      <input placeholder="Type some emojis" className="bg-transparent grow outline-none" />
    </div>
  )
};


// PostView
type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <Image
        src={author.profileImageUrl}
        alt="Pofile image"
        className="w-14 h-14 rounded-full" width="56" height="56"
      />
      <div className="flex flex-col text-slate-300 font-thin">
        <div className="flex gap-1">
          <div className="font-normal">{`@${author.username}`}</div>
          <div>Â·</div>
          <div>{dayjs(post.createdAt).fromNow()}</div>
        </div>
        <span className={`${notoemoji.className} pt-2`}>{post.content}</span>
      </div>
    </div>
  );
};

// Home
const Home: NextPage = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();
  const user = useUser();

  if (isLoading) return <div>Loading...</div>;
  if (!data) return <div>Data not found</div>;
  if (!user) return <div>User not found</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${inter.className} flex justify-center h-screen`}>
        <div className="w-full md:max-w-2xl border-x border-slate-400 h-full">
          <div className="flex border-b border-slate-400 p-4 ">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton />
              </div>
            )}
            {user.isSignedIn && <CreatePostWizzard />}
          </div>
          <div className="flex flex-col">
            {data.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
